<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OWSPublicAPI</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:OWSCharacterPersistence.Controllers.AbilitiesController" -->
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.#ctor(Orleans.IClusterClient)">
            <summary>
            Constructor for Ability related API calls.
            </summary>
            <remarks>
            All dependencies are injected.
            </remarks>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            OnActionExecuting override
            </summary>
            <remarks>
            Checks for an empty IHeaderCustomerGUID.
            </remarks>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.AddAbilityToCharacter(OWSCharacterPersistence.Requests.Abilities.AddAbilityToCharacterRequest)">
            <summary>
            Add Ability To Character
            </summary>
            <remarks>
            Adds an Ability to a Character and also sets the initial values of Ability Level and the per instance Custom JSON
            </remarks>
            <param name="request">
            <b>AbilityName</b> - This is the name of the ability to add to the character.<br/>
            <b>AbilityLevel</b> - This is a number representing the Ability Level of the ability to add.  If you need more per instance customization, use the Custom JSON field.<br/>
            <b>CharacterName</b> - This is the name of the character to add the ability to.<br/>
            <b>CharHasAbilitiesCustomJSON</b> - This field is used to store Custom JSON for the specific instance of this Ability.  If you have a system where each ability on a character has some kind of custom variation, then this is where to store that variation data.  In a system where an ability operates the same on every player, this field would not be used.  Don't store Ability Level in this field, as there is already a field for that.  If you need to store Custom JSON for ALL instances of an ability, use the Custom JSON on the Ability itself.
            </param>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.GetCharacterAbilities(OWSCharacterPersistence.Requests.Abilities.GetCharacterAbilitiesRequest)">
            <summary>
            Get Character Abilities
            </summary>
            <remarks>
            Gets a List of the Abilities on the Character specified with CharacterName
            </remarks>
            <param name="request">
            <b>CharacterName</b> - This is the name of the character to get abilities for.
            </param>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.GetAbilities">
            <summary>
            Get Abilities
            </summary>
            <remarks>
            Gets a List of all Abilities
            </remarks>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.GetAbilityBars(OWSCharacterPersistence.Requests.Abilities.GetAbilityBarsRequest)">
            <summary>
            Get Ability Bars
            </summary>
            <remarks>
            Gets a List of Ability Bars for the Character specified with CharacterName
            </remarks>
            <param name="request">
            <b>CharacterName</b> - This is the name of the character to get ability bars for.
            </param>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.GetAbilityBarsAndAbilities(OWSCharacterPersistence.Requests.Abilities.GetCharacterAbilitiesRequest)">
            <summary>
            Get Ability Bars and Abilities
            </summary>
            <remarks>
            Gets a List of Ability Bars and the Abilities on those Bars for the Character specified with CharacterName
            </remarks>
            <param name="request">
            <b>CharacterName</b> - This is the name of the character to get abilities for.
            </param>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.RemoveAbilityFromCharacter(OWSCharacterPersistence.Requests.Abilities.RemoveAbilityFromCharacterRequest)">
            <summary>
            Remove Ability From Character
            </summary>
            <remarks>
            Removes an Ability from a Character
            </remarks>
            <param name="request">
            <b>AbilityName</b> - This is the name of the ability to add to the character.<br/>
            <b>CharacterName</b> - This is the name of the character to add the ability to.
            </param>
        </member>
        <member name="M:OWSCharacterPersistence.Controllers.AbilitiesController.UpdateAbilityOnCharacter(OWSCharacterPersistence.Requests.Abilities.UpdateAbilityOnCharacterRequest)">
            <summary>
            Update Ability on Character
            </summary>
            <remarks>
            Adds an Ability to a Character and also sets the initial values of Ability Level and the per instance Custom JSON
            </remarks>
            <param name="request">
            <b>AbilityName</b> - This is the name of the ability to update on the character.<br/>
            <b>AbilityLevel</b> - This is a number representing the Ability Level of the ability to add.  If you need more per instance customization, use the Custom JSON field.<br/>
            <b>CharacterName</b> - This is the name of the character to add the ability to.<br/>
            <b>CharHasAbilitiesCustomJSON</b> - This field is used to store Custom JSON for the specific instance of this Ability.  If you have a system where each ability on a character has some kind of custom variation, then this is where to store that variation data.  In a system where an ability operates the same on every player, this field would not be used.  Don't store Ability Level in this field, as there is already a field for that.  If you need to store Custom JSON for ALL instances of an ability, use the Custom JSON on the Ability itself.
            </param>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Abilities.AddAbilityToCharacterRequest">
            <summary>
            Add Ability To Character
            </summary>
            <remarks>
            Adds an Ability to a Character and also sets the initial values of Ability Level and the per instance Custom JSON
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.AddAbilityToCharacterRequest.AbilityName">
            <summary>
            Ability Name
            </summary>
            <remarks>
            This is the name of the ability to add to the character.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.AddAbilityToCharacterRequest.AbilityLevel">
            <summary>
            Ability Level
            </summary>
            <remarks>
            This is a number representing the Ability Level of the ability to add.  If you need more per instance customization, use the Custom JSON field.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.AddAbilityToCharacterRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to add the ability to.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.AddAbilityToCharacterRequest.CharHasAbilitiesCustomJSON">
            <summary>
            Custom JSON
            </summary>
            <remarks>
            This field is used to store Custom JSON for the specific instance of this Ability.  If you have a system where each ability on a character has some kind of custom variation, then this is where to store that variation data.  In a system where an ability operates the same on every player, this field would not be used.  Don't store Ability Level in this field, as there is already a field for that.  If you need to store Custom JSON for ALL instances of an ability, use the Custom JSON on the Ability itself.
            </remarks>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Abilities.GetAbilityBarsAndAbilitiesRequest">
            <summary>
            Get Ability Bars And Abilities
            </summary>
            <remarks>
            Get a flattened list of ability bars and the abilities on those bars for this character.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.GetAbilityBarsAndAbilitiesRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to get ability bars and abilities for.
            </remarks>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Abilities.GetAbilityBarsRequest">
            <summary>
            Get Ability Bars
            </summary>
            <remarks>
            Get a list of ability bars this character has.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.GetAbilityBarsRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to get ability bars for.
            </remarks>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Abilities.GetCharacterAbilitiesRequest">
            <summary>
            Get Character Abilities
            </summary>
            <remarks>
            Get a list of the abilities this character has.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.GetCharacterAbilitiesRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to get abilities for.
            </remarks>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Abilities.RemoveAbilityFromCharacterRequest">
            <summary>
            Remove Ability from Character
            </summary>
            <remarks>
            Removes an Ability from a Character
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.RemoveAbilityFromCharacterRequest.AbilityName">
            <summary>
            Ability Name
            </summary>
            <remarks>
            This is the name of the ability to add to the character.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.RemoveAbilityFromCharacterRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to add the ability to.
            </remarks>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Abilities.UpdateAbilityOnCharacterRequest">
            <summary>
            Update Ability on Character
            </summary>
            <remarks>
            Update the Ability on the Character to modify Ability Level and the per instance Custom JSON
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.UpdateAbilityOnCharacterRequest.AbilityName">
            <summary>
            Ability Name
            </summary>
            <remarks>
            This is the name of the ability to update on the character.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.UpdateAbilityOnCharacterRequest.AbilityLevel">
            <summary>
            Ability Level
            </summary>
            <remarks>
            This is a number representing the Ability Level of the ability to add.  If you need more per instance customization, use the Custom JSON field.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.UpdateAbilityOnCharacterRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to update the ability on.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Abilities.UpdateAbilityOnCharacterRequest.CharHasAbilitiesCustomJSON">
            <summary>
            Custom JSON
            </summary>
            <remarks>
            This field is used to store Custom JSON for the specific instance of this Ability.  If you have a system where each ability on a character has some kind of custom variation, then this is where to store that variation data.  In a system where an ability operates the same on every player, this field would not be used.  Don't store Ability Level in this field, as there is already a field for that.  If you need to store Custom JSON for ALL instances of an ability, use the Custom JSON on the Ability itself.
            </remarks>
        </member>
        <member name="T:OWSCharacterPersistence.Requests.Characters.GetCustomDataRequest">
            <summary>
            Get Custom Data
            </summary>
            <remarks>
            Get a list of all Custom Data fields for this character with their Field Values.  Characters can have zero or more Custom Data fields.
            </remarks>
        </member>
        <member name="P:OWSCharacterPersistence.Requests.Characters.GetCustomDataRequest.CharacterName">
            <summary>
            Character Name
            </summary>
            <remarks>
            This is the name of the character to get Custom Data fields for.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Controllers.CharactersController">
            <summary>
            Public Character related API calls.
            </summary>
            <remarks>
            Contains character related API calls that are all publicly accessible.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.CharactersController.#ctor(Orleans.IClusterClient)">
            <summary>
            Constructor for Public Character related API calls.
            </summary>
            <remarks>
            All dependencies are injected.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.CharactersController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            OnActionExecuting override
            </summary>
            <remarks>
            Checks for an empty IHeaderCustomerGUID.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.CharactersController.PublicGetByNameRequest(OWSShared.DTOs.GetByNameDTO)">
            <summary>
            Get Characters Data by Character Name.
            </summary>
            <remarks>
            Gets a Characters by Name.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Controllers.SystemController">
            <summary>
            Public System API calls.
            </summary>
            <remarks>
            Contains system related API calls that are all publicly accessible.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.SystemController.Status">
            <summary>
            Gets the Api Status.
            </summary>
            <remarks>
            Get the Api Status and return true
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Controllers.UsersController">
            <summary>
            Public User related API calls.
            </summary>
            <remarks>
            Contains user related API calls that are all publicly accessible.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.#ctor(Microsoft.Extensions.Logging.ILogger{OWSPublicAPI.Controllers.UsersController},OWSData.Repositories.Interfaces.IUsersRepository,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IPublicAPIInputValidation,OWSShared.Interfaces.IHeaderCustomerGUID,Microsoft.Extensions.Options.IOptions{OWSShared.Options.PublicAPIOptions},Microsoft.Extensions.Options.IOptions{OWSShared.Options.APIPathOptions},System.Net.Http.IHttpClientFactory,Orleans.IClusterClient)">
            <summary>
            Constructor for Public User related API calls.
            </summary>
            <remarks>
            All dependencies are injected.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.CreateCharacter(OWSPublicAPI.Requests.Users.CreateCharacterRequest)">
            <summary>
            Creates a new Character.
            </summary>
            <remarks>
            Create a new Character and attach it to the User referenced by the UserSessionGUID. ClassName is the name of the Class you setup in the management console (from the Characters tab). 
            Classes are meant to be default values for creating characters. The purpose is to ensure that players are not able to hack their starting stats. This is needed because Characters are created from and unsecure UE client
            that has not connected to a UE server yet.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.CreateCharacterUsingDefaultCharacterValues(OWSShared.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO)">
            <summary>
            Creates a new Character using DefaultCharacterValues.
            </summary>
            <remarks>
            Create a new Character and attach it to the User referenced by the UserSessionGUID. DefaultSetName is the name of the DefaultCharacterValues row. 
            DefaultCharacterValues and DefaultCustomCharacterData are used to set the default starting values for new characters. The purpose is to ensure that players are not able to hack their starting stats. This is needed because Characters are created from and unsecure UE client
            that has not connected to a UE server yet.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.GetAllCharacters(OWSPublicAPI.Requests.Users.GetAllCharactersRequest)">
            <summary>
            Get All Characters for a specified User.
            </summary>
            <remarks>
            Send in a UserSessionGUID to specify which User to get all Characters for.  Use GetAllCharactersWithCustomData to also get all attached custom data with the same API call.
            Users may have zero or more Characters.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.GetPlayerGroupsCharacterIsIn(OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest)">
            <summary>
            Gets a list of Player Groups that a Character is in.
            </summary>
            <remarks>
            Send a UserSessionGUID, a Character's CharacterName, and a PlayerGroupTypeID to get a list of groups the player is in.  Set the PlayerGroupTypeID parameter to zero to remove the Player Group Type filter.
            Player Groups are persistent across player sessions and can be used to manage Party groups, Raid groups, Guilds, etc.
            See the PlayerGroupTypes table for a list of Player Group Types.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.GetServerToConnectTo(OWSPublicAPI.Requests.Users.GetServerToConnectToRequest)">
            <summary>
            Gets the server to connect to for a specific character or zonename.
            </summary>
            <remarks>
            Get the Zone Server to travel to based on the User referenced by the UserSessionGUID.  Prior to calling this API, you MUST set the Selected Character to connect with using the UserSessionSetSelectedCharacter API for the UserSessionGUID passed into this API.
            Send in an empty ZoneName or ZoneName set to "GETLASTZONENAME" to use the last zone the Character was on rather than specifying a ZoneName.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.GetUserSession(OWSPublicAPI.Requests.Users.GetUserSessionRequest)">
            <summary>
            Gets the User Session from a UserSessionGUID.
            </summary>
            <remarks>
            Get the User Session object (some values may be null if a selected character is not set).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.LoginAndCreateSession(OWSPublicAPI.Requests.Users.LoginAndCreateSessionRequest)">
            <summary>
            Login and create a User Session that you can reference via a UserSessionGUID.
            </summary>
            <remarks>
            Login by passing an Email and Password.  See ExternalLoginAndCreateSession when using an external login provider (such as Epic Game Store or Xsolla).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.ExternalLoginAndCreateSession(OWSPublicAPI.Requests.Users.ExternalLoginAndCreateSessionRequest)">
            <summary>
            Login and create a User Session using an External Login Provider (such as Epic Game Store or Xsolla).
            </summary>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.Logout(OWSShared.DTOs.LogoutDTO)">
            <summary>
            Logout of a User Session
            </summary>
            <remarks>
            Logout of a User Session based on a UserSessionGUID.  This method is for logout from the client side of a game before connecting to a UE server.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.UserSessionSetSelectedCharacter(OWSPublicAPI.Requests.Users.UserSessionSetSelectedCharacterRequest)">
            <summary>
            Set the Character that has been selected to play for a User Session (UserSessionGUID).
            </summary>
            <remarks>
            This method MUST be called on a User Session before calling the GetServerToConnectTo API.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.SetSelectedCharacterAndGetUserSession(OWSPublicAPI.Requests.Users.SetSelectedCharacterAndGetUserSessionRequest)">
            <summary>
            Set the Character that has been selected to play for a User Session (UserSessionGUID) and get the complete User Session object all in one API call.
            </summary>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.RegisterUser(OWSShared.DTOs.RegisterUserDTO)">
            <summary>
            Register a new User account by sending FirstName, LastName, Email, and Password.
            </summary>
            <remarks>
            Register a new User and then Logs the User in and Creates a User Session.  Implement your own IPublicAPIInputValidation to specify your specific validation rules for FirstName, LastName, Email, and Password.  You can wire up the dependency injection for your custom IPublicAPIInputValidation in Startup.cs.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Controllers.UsersController.RemoveCharacter(OWSPublicAPI.Requests.Users.RemoveCharacterRequest)">
            <summary>
            Remove a Character from this User (UserSessionGUID).
            </summary>
            <remarks>
            Removes a Character from the User.  This method permanently deletes the character and all associated data.  In the future, it might make sense to modify this to only mark the character as removed to support restoring an accidentally removed character.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Program">
            <summary>
            OWS Public API Program
            </summary>
            <remarks>
            The program class.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Program.Main(System.String[])">
            <summary>
            OWS Public API Main
            </summary>
            <remarks>
            The program entry point.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Program.CreateHostBuilder(System.String[])">
            <summary>
            OWS Public API CreateHostBuilder
            </summary>
            <remarks>
            Configure the web host.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Characters.PublicGetByNameRequest">
            <summary>
            GetByNameRequest Handler
            </summary>
            <remarks>
            Handles api/Characters/GetByName requests.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Characters.PublicGetByNameRequest.#ctor(OWSShared.DTOs.GetByNameDTO,OWSData.Repositories.Interfaces.IUsersRepository,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IHeaderCustomerGUID,OWSShared.Interfaces.ICustomCharacterDataSelector,OWSShared.Interfaces.IGetReadOnlyPublicCharacterData)">
            <summary>
            Constructor for GetByNameRequest
            </summary>
            <remarks>
            Injects the dependencies for the GetByNameRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Characters.PublicGetByNameRequest.Handle">
            <summary>
            Handles the GetByNameRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.CreateCharacterRequest">
            <summary>
            CreateCharacterRequest Handler
            </summary>
            <remarks>
            Handles api/Users/CreateCharacter requests.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.CreateCharacterRequest.UserSessionGUID">
            <summary>
            UserSessionGUID Request Paramater.
            </summary>
            <remarks>
            Contains the User Session GUID from the request.  This identifies the User we are modifying.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.CreateCharacterRequest.CharacterName">
            <summary>
            CharacterName Request Paramater.
            </summary>
            <remarks>
            Contains the Character Name from the request.  This is the new Character Name to create.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.CreateCharacterRequest.ClassName">
            <summary>
            ClassName Request Paramater.
            </summary>
            <remarks>
            Contains the Class Name from the request.  This sets the default values for the new Character.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.CreateCharacterRequest.SetData(OWSData.Repositories.Interfaces.IUsersRepository,OWSShared.Interfaces.IPublicAPIInputValidation,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Set Dependencies for CreateCharacterRequest
            </summary>
            <remarks>
            Injects the dependencies for the CreateCharacterRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.CreateCharacterRequest.Handle">
            <summary>
            Handles the CreateCharacterRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.CreateCharacterUsingDefaultCharacterValuesRequest">
            <summary>
            CreateCharacterRequest Handler
            </summary>
            <remarks>
            Handles api/Users/CreateCharacter requests.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.CreateCharacterUsingDefaultCharacterValuesRequest.#ctor(OWSShared.DTOs.CreateCharacterUsingDefaultCharacterValuesDTO,OWSData.Repositories.Interfaces.IUsersRepository,OWSData.Repositories.Interfaces.ICharactersRepository,OWSShared.Interfaces.IPublicAPIInputValidation,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Constrcutor for CreateCharacterUsingDefaultCharacterValuesRequest
            </summary>
            <remarks>
            Injects the dependencies for the CreateCharacterUsingDefaultCharacterValuesRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.CreateCharacterUsingDefaultCharacterValuesRequest.Handle">
            <summary>
            Handles the CreateCharacterRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.ExternalLoginAndCreateSessionRequest">
            <summary>
            ExternalLoginAndCreateSessionRequest Handler
            </summary>
            <remarks>
            Handles api/Users/ExternalLoginAndCreateSession requests.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.ExternalLoginAndCreateSessionRequest.Email">
            <summary>
            Email Request Paramater.
            </summary>
            <remarks>
            The email is used as the primary ID for the sign in credentials.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.ExternalLoginAndCreateSessionRequest.Password">
            <summary>
            Password Request Paramater.
            </summary>
            <remarks>
            The password is part of the sign in credentials.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.ExternalLoginAndCreateSessionRequest.SetData(OWSData.Repositories.Interfaces.IUsersRepository,OWSExternalLoginProviders.Interfaces.IExternalLoginProviderFactory,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Set Dependencies for ExternalLoginAndCreateSessionRequest
            </summary>
            <remarks>
            Injects the dependencies for the ExternalLoginAndCreateSessionRequest.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.GetAllCharactersRequest">
            <summary>
            GetAllCharactersRequest
            </summary>
            <remarks>
            This request object handles requests for api/Users/GetAllCharacters
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.GetAllCharactersRequest.UserSessionGUID">
            <summary>
            UserSessionGUID
            </summary>
            <remarks>
            This is the User Session GUID to determine the User to get all Characters for.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.GetAllCharactersRequest.SetData(OWSData.Repositories.Interfaces.IUsersRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            SetData
            </summary>
            <remarks>
            Used to pass dependencies to the Request object (for performance reasons).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.GetAllCharactersRequest.Handle">
            <summary>
            Handle
            </summary>
            <remarks>
            This handles the Request.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest">
            <summary>
            GetPlayerGroupsCharacterIsInRequest
            </summary>
            <remarks>
            This request object handles requests for api/Users/GetPlayerGroupsCharacterIsIn
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest.UserSessionGUID">
            <summary>
            UserSessionGUID
            </summary>
            <remarks>
            This is the User Session GUID to determine the User to get Player Groups for.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest.CharacterName">
            <summary>
            CharacterName
            </summary>
            <remarks>
            CharacterName filters the list of Player Groups to only return for this CharacterName.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest.PlayerGroupTypeID">
            <summary>
            PlayerGroupTypeID
            </summary>
            <remarks>
            PlayerGroupTypeID filters the list of Player Groups to only return for this PlayerGroupTypeID.  Set this parameter to zero to remove the Player Group Type filter.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest.SetData(OWSData.Repositories.Interfaces.IUsersRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            SetData
            </summary>
            <remarks>
            Used to pass dependencies to the Request object (for performance reasons).
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.GetPlayerGroupsCharacterIsInRequest.Handle">
            <summary>
            Handle
            </summary>
            <remarks>
            This handles the Request.
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.RegisterUserRequest">
            <summary>
            Register a User
            </summary>
            <remarks>
            Register a user with the system.  You can control validation with a custom IIPublicAPIInputValidation implementation.  See DefaultPublicAPIInputValidation for an example.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.RegisterUserRequest.#ctor(OWSShared.DTOs.RegisterUserDTO,OWSData.Repositories.Interfaces.IUsersRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            RegisterUserRequest Constructor
            </summary>
            <remarks>
            Initialize the RegisterUserRequest object with dependencies
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.RegisterUserRequest.Handle">
            <summary>
            RegisterUserRequest Request Handler
            </summary>
            <remarks>
            Handle the RegisterUserRequest request
            </remarks>
        </member>
        <member name="T:OWSPublicAPI.Requests.Users.RemoveCharacterRequest">
            <summary>
            RemoveCharacterRequest Handler
            </summary>
            <remarks>
            Handles api/Users/RemoveCharacter requests.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.RemoveCharacterRequest.UserSessionGUID">
            <summary>
            UserSessionGUID Request Paramater.
            </summary>
            <remarks>
            Contains the User Session GUID from the request.  This identifies the User we are modifying.
            </remarks>
        </member>
        <member name="P:OWSPublicAPI.Requests.Users.RemoveCharacterRequest.CharacterName">
            <summary>
            CharacterName Request Paramater.
            </summary>
            <remarks>
            Contains the Character Name from the request.  This is the new Character Name to create.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.RemoveCharacterRequest.SetData(OWSData.Repositories.Interfaces.IUsersRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            Set Dependencies for CreateCharacterRequest
            </summary>
            <remarks>
            Injects the dependencies for the CreateCharacterRequest.
            </remarks>
        </member>
        <member name="M:OWSPublicAPI.Requests.Users.RemoveCharacterRequest.Handle">
            <summary>
            Handles the CreateCharacterRequest
            </summary>
            <remarks>
            Overrides IRequestHandler Handle().
            </remarks>
        </member>
        <member name="M:OWSGlobalData.Controllers.GlobalDataController.AddOrUpdateGlobalDataItem(OWSGlobalData.DTOs.AddOrUpdateGlobalDataItemDTO)">
            <summary>
            Add an item to Global Data
            </summary>
            <remarks>
            Adds or updates a key/value pair to the Global Data system.
            </remarks>
        </member>
        <member name="M:OWSGlobalData.Controllers.GlobalDataController.GetGlobalDataItem(System.String)">
            <summary>
            Gets an item from Global Data
            </summary>
            <remarks>
            Gets an item from the Global Data system by looking it up based on globalDataKey
            </remarks>
        </member>
        <member name="M:OWSInstanceManagement.Controllers.InstanceController.GetZoneInstance(System.Int32)">
            <summary>
            GetZoneInstance
            </summary>
            <remarks>
            Get information on the server instance that matches the ZoneInstanceId in the POST data
            </remarks>
        </member>
        <member name="T:OWSInstanceManagement.Controllers.ZonesController">
            <summary>
            Zones Controller
            </summary>
            <remarks>
            Controller for Handling Zone related requests.
            </remarks>
        </member>
        <member name="M:OWSInstanceManagement.Controllers.ZonesController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Zones Controller - OnActionExecuting
            </summary>
            <remarks>
            OnActionExecuting
            </remarks>
        </member>
        <member name="M:OWSInstanceManagement.Controllers.ZonesController.#ctor(Orleans.IClusterClient)">
            <summary>
            Zones Controller - Constructor
            </summary>
            <remarks>
            Setup for dependency injection.
            </remarks>
        </member>
        <member name="M:OWSInstanceManagement.Controllers.ZonesController.AddZone(OWSInstanceManagement.Requests.Zones.AddZoneRequest)">
            <summary>
            Add a Zone
            </summary>
            <remarks>
            Add a Zone to the Maps table.
            </remarks>
        </member>
        <member name="T:OWSInstanceManagement.Requests.Instance.GetCurrentWorldTimeRequest">
            <summary>
            GetCurrentWorldTimeRequest
            </summary>
            <remarks>
            Get the Current World Time based on the StartTime stored in the WorldSettings table.  The format is in seconds since 1/1/1970.
            </remarks>
        </member>
        <member name="T:OWSInstanceManagement.Requests.Instance.GetServerInstanceFromPortRequest">
            <summary>
            GetServerInstanceFromPortRequest
            </summary>
            <remarks>
            Get information on the server instance that matches the port and IP
            </remarks>
        </member>
        <member name="T:OWSInstanceManagement.Requests.Instance.GetZoneInstanceRequest">
            <summary>
            GetZoneInstanceRequest
            </summary>
            <remarks>
            Get information on the server instance that matches the ZoneInstanceId
            </remarks>
        </member>
        <member name="M:OWSInstanceManagement.Requests.Instance.GetZoneInstanceRequest.#ctor(System.Int32,OWSData.Repositories.Interfaces.IInstanceManagementRepository,OWSShared.Interfaces.IHeaderCustomerGUID)">
            <summary>
            GetZoneInstanceRequest Constructor
            </summary>
            <remarks>
            This constructor is used to inject the dependencies into the GetZoneInstanceRequest
            </remarks>
        </member>
        <member name="T:OWSInstanceManagement.Requests.Instance.GetZoneInstancesForZoneRequest">
            <summary>
            Get a list of Zone Instances for a Zone
            </summary>
            <remarks>
            Get a list of running Zone Instances for a Zone. This list can be used to allow players to pick which instance of a Zone they want to switch to.
            </remarks>
        </member>
        <member name="P:OWSInstanceManagement.Requests.Instance.GetZoneInstancesForZoneRequest.Request">
            <summary>
            Request - ZoneName
            </summary>
            <remarks>
            This Request object contains a field for sending in the ZoneName to get a list of running Zone Instances for.
            </remarks>
        </member>
        <member name="T:OWSInstanceManagement.Requests.Instance.UpdateNumberOfPlayersRequest">
            <summary>
            UpdateNumberOfPlayersRequest
            </summary>
            <remarks>
            Update the number of players on a zone instance by matching it to the port and IP
            </remarks>
        </member>
    </members>
</doc>
